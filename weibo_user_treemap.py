import os
import pandas as pd
import numpy as np
import jieba
import jieba.analyse
from collections import Counter
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.decomposition import LatentDirichletAllocation
from sklearn.model_selection import GridSearchCV
import matplotlib.pyplot as plt
from wordcloud import WordCloud
# import gensim
import gensim.corpora as corpora
from gensim.models.ldamodel import LdaModel
# import requests
import random
import squarify  # pip install squarify
import colorsys


# 加载数据
csv_file_path = './user/6538187047_wind-in-the-willows.csv'
folder_path = './user'
all_contents = []

# # 遍历文件夹中的所有文件
# for filename in os.listdir(folder_path):
#     if filename.endswith('.csv'):  # 确保只处理CSV文件
#         # 完整的文件路径
#         file_path = os.path.join(folder_path, filename)
#         # 读取CSV文件
#         data = pd.read_csv(file_path)
#         # 确保'content'列存在
#         if 'content' in data:
#             # 提取'content'列并追加到all_contents列表
#             all_contents.extend(data['content'].tolist())

# # 将所有内容转换为DataFrame
# content_df = pd.DataFrame(all_contents, columns=['content'])

# # 将合并后的内容存储为新的CSV文件
# content_df.to_csv('save/merged_contents.csv', index=False)
        
# 字体链接（思源宋体）
font_url = 'https://github.com/adobe-fonts/source-han-sans/raw/release/OTF/SimplifiedChinese/SourceHanSansSC-Regular.otf'
# df = pd.read_csv('save/merged_contents.csv')
df = pd.read_csv(csv_file_path)


custom_stop_words =[  "不是","原图", "曾经", "呕", "归", "而已", "同时", "把", "随", "丰富", "举行", "仍然", "或者", "变成", "良好", "这儿", "现在", "该", "具体说来", "有利", "最后", "设使", "看来", "故此", "问题", "全部", "吗", "各级", "可", "双方", "进行", "需要", "得", "每个", "咋", "自从", "并", "及时", "毫不", "紧接着", "可能", "允许", "知道", "不得", "掌握", "哪里", "不能", "哎", "有点", "倘然", "能够", "望", "着呢", "彼", "之前", "一起", "所谓", "假若", "里面", "不会", "怎", "你", "您", "好象", "欢迎", "因而", "有些", "强烈", "除", "表明", "嘻", "为什麽", "今年", "大力", "然而", "比较", "况且", "岂但", "即令", "哪天", "其次", "朝", "主要", "继而", "认为", "们", "何时", "别人",
    "什么",
    "真的",
    "可以",
    "没有",
    "一个",
    "因为",
    "我们",
    "这个",
    "喜欢",
    "自己",
    "男人",
    "老公",
    "但是",
    "时候",
    "这样",
    "觉得",
    "这种",
    "不想",    
    "这么",    
    "如果",    
    "大家",    
    "看到",    
    "非常",    
    "怎么",    
    "而且",    
    "东西",
    "图片",
    "分享",
    "啥意思",
    "组图",
    "微博",
    "比如",
    "就是",
    "很多",
    "这些",
    "突出",
    "这",
    "己",
    "形成",
    "附近",
    "设若",
    "实际",
    "出来",
    "容易",
    "归",
    "拿",
    "能",
    "或",
    "任凭",
    "就是说",
    "即便",
    "其次",
    "在下",
    "呃",
    "固然",
    "诸位",
    "不只",
    "总的来看",
    "哎哟",
    "为什麽",
    "加入",
    "嘿",
    "结合",
    "再者",
    "充分",
    "必要",
    "因为",
    "朝",
    "各",
    "好象",
    "确定",
    "先後",
    "如其",
    "部分",
    "根据",
    "不如",
    "取得",
    "咋",
    "产生",
    "哪儿",
    "多次",
    "丰富",
    "不光",
    "替",
    "一样",
    "联系",
    "大大",
    "没有",
    "于",
    "怎么样",
    "无宁",
    "另外",
    "最近",
    "几",
    "对应",
    "呢",
    "不久",
    "临",
    "了",
    "是",
    "其它",
    "方便",
    "云云",
    "尽管",
    "不独",
    "所有",
    "把",
    "有著",
    "每",
    "用",
    "先后",
    "认真",
    "待",
    "具体说来",
    "通过",
    "几时",
    "等",
    "不单",
    "再说",
    "决定",
    "只要",
    "加以",
    "然则",
    "特点",
    "嗡嗡",
    "可见",
    "啊",
    "以",
    "呜呼",
    "下去",
    "喂",
    "凭借",
    "罢了",
    "啪达",
    "坚决",
    "问题",
    "不足",
    "不然",
    "假使",
    "另一方面",
    "通常",
    "宣布",
    "之一",
    "她",
    "以来",
    "後面",
    "如",
    "纵",
    "过去",
    "战斗",
    "正常",
    "明显",
    "重要",
    "过",
    "什麽",
    "共同",
    "该",
    "趁",
    "哈哈",
    "无法",
    "愿意",
    "是的",
    "重大",
    "伟大",
    "获得",
    "专门",
    "有",
    "至于",
    "啥",
    "她们",
    "有着",
    "心里",
    "今後",
    "极了",
    "与否",
    "哗",
    "所谓",
    "凭",
    "倘",
    "双方",
    "要",
    "那",
    "起见",
    "宁愿",
    "宁肯",
    "哪年",
    "那边",
    "使用",
    "造成",
    "哇",
    "有些",
    "根本",
    "着呢",
    "适当",
    "且",
    "那儿",
    "帮助",
    "本",
    "照着",
    "其二",
    "的",
    "下来",
    "周围",
    "以外",
    "使得",
    "认为",
    "至",
    "综上所述",
    "向",
    "一方面",
    "继而",
    "不管",
    "以前",
    "合理",
    "往",
    "召开",
    "明确",
    "么",
    "巨大",
    "随著",
    "那时",
    "可能",
    "中小",
    "有的",
    "不变",
    "遇到",
    "不过",
    "纵令",
    "呗",
    "这种",
    "以为",
    "得出",
    "叫",
    "则",
    "应当",
    "或是",
    "一致",
    "转变",
    "所以",
    "似的",
    "也罢",
    "而",
    "此间",
    "关于",
    "举行",
    "毋宁",
    "那样",
    "属于",
    "一时",
    "如果",
    "嘻",
    "还是",
    "开始",
    "开展",
    "虽然",
    "基本",
    "立即",
    "个人",
    "而言",
    "不拘",
    "但",
    "不得",
    "普通",
    "相当",
    "怎么办",
    "这么样",
    "应用",
    "准备",
    "反之",
    "随",
    "万一",
    "以上",
    "只有",
    "一次",
    "叫做",
    "呕",
    "他的",
    "大批",
    "某",
    "因而",
    "首先",
    "实现",
    "进步",
    "从事",
    "大力",
    "之前",
    "将",
    "看出",
    "乃至",
    "其一",
    "失去",
    "广大",
    "为主",
    "有时",
    "练习",
    "而外",
    "掌握",
    "安全",
    "哉",
    "当着",
    "坚持",
    "却不",
    "吧",
    "连同",
    "这就是说",
    "纵然",
    "变成",
    "假若",
    "高兴",
    "考虑",
    "如何",
    "这么",
    "严格",
    "主张",
    "但是",
    "欢迎",
    "们",
    "做到",
    "分别",
    "一直",
    "咱们",
    "从",
    "他们",
    "避免",
    "本着",
    "于是",
    "果真",
    "赶",
    "地",
    "旁人",
    "按",
    "范围",
    "与",
    "慢说",
    "满足",
    "可",
    "这些",
    "适用",
    "吧哒",
    "像",
    "相反",
    "几乎",
    "需要",
    "还有",
    "哪些",
    "嗯",
    "保持",
    "出现",
    "过来",
    "边",
    "即使",
    "呀",
    "不特",
    "后来",
    "哎",
    "自己",
    "一切",
    "其余",
    "论",
    "咚",
    "为",
    "就是",
    "常常",
    "总结",
    "哎呀",
    "怎么",
    "并",
    "为着",
    "何处",
    "有力",
    "这样",
    "规定",
    "不同",
    "前后",
    "他",
    "每当",
    "当前",
    "不能",
    "那么些",
    "不可",
    "集中",
    "矣",
    "密切",
    "呜",
    "任何",
    "这边",
    "又",
    "相应",
    "以便",
    "代替",
    "并且",
    "即或",
    "各种",
    "同",
    "开外",
    "与此同时",
    "什么样",
    "来着",
    "甚而",
    "吗",
    "经",
    "要求",
    "那些",
    "往往",
    "其中",
    "我",
    "怎样",
    "为何",
    "每个",
    "原来",
    "以致",
    "哩",
    "成为",
    "依",
    "上去",
    "啐",
    "各自",
    "哪样",
    "复杂",
    "多少",
    "积极",
    "进而",
    "管",
    "说明",
    "按照",
    "移动",
    "後来",
    "打",
    "不成",
    "彼此",
    "当时",
    "各地",
    "某些",
    "就",
    "哪怕",
    "腾",
    "不要",
    "每天",
    "具体",
    "随着",
    "怎麽",
    "反过来",
    "最好",
    "它们的",
    "况且",
    "组成",
    "依靠",
    "它们",
    "重新",
    "或者",
    "加强",
    "不怕",
    "任务",
    "嘎",
    "一",
    "等等",
    "俺",
    "哪个",
    "那会儿",
    "而是",
    "主要",
    "上面",
    "相对而言",
    "人们",
    "因此",
    "尤其",
    "这时",
    "被",
    "一天",
    "企图",
    "许多",
    "唉",
    "达到",
    "那麽",
    "除了",
    "除非",
    "大量",
    "叮咚",
    "为了",
    "到",
    "尔后",
    "一般",
    "巩固",
    "及至",
    "我的",
    "而况",
    "那么",
    "别",
    "那里",
    "例如",
    "假如",
    "虽则",
    "吓",
    "以至于",
    "彼",
    "以后",
    "设使",
    "给",
    "望",
    "纵使",
    "乌乎",
    "继续",
    "甚至",
    "每年",
    "比较",
    "迅速",
    "于是乎",
    "有所",
    "表示",
    "不是",
    "然而",
    "您",
    "不比",
    "一些",
    "这点",
    "全面",
    "喔唷",
    "任",
    "嘛",
    "真是",
    "自",
    "处理",
    "无论",
    "注意",
    "而已",
    "由此可见",
    "完全",
    "较之",
    "故此",
    "相信",
    "可是",
    "好的",
    "甚么",
    "强调",
    "即若",
    "只限",
    "当",
    "恰恰相反",
    "得",
    "人家",
    "连",
    "不论",
    "相对",
    "如上所述",
    "之所以",
    "反映",
    "构成",
    "别说",
    "另",
    "除此之外",
    "为什么",
    "促进",
    "是否",
    "别的",
    "若",
    "现在",
    "并没有",
    "漫说",
    "比如",
    "遭到",
    "由于",
    "有利",
    "非常",
    "除",
    "她的",
    "之",
    "个",
    "显著",
    "对",
    "如下",
    "其他",
    "这里",
    "其实",
    "同时",
    "今天",
    "此外",
    "换句话说",
    "了解",
    "者",
    "各个",
    "可以",
    "今年",
    "倘然",
    "虽说",
    "哼唷",
    "不断",
    "起来",
    "左右",
    "如若",
    "此时",
    "接著",
    "这么些",
    "一起",
    "嗳",
    "我们",
    "转动",
    "经过",
    "嘎登",
    "适应",
    "即",
    "运用",
    "不一",
    "若非",
    "倘使",
    "多",
    "扩大",
    "清楚",
    "怎",
    "整个",
    "仍然",
    "在",
    "哪里",
    "并不",
    "自身",
    "这儿",
    "顺",
    "那么样",
    "争取",
    "自家",
    "强烈",
    "应该",
    "维持",
    "具体地说",
    "抑或",
    "最高",
    "普遍",
    "彻底",
    "接着",
    "完成",
    "对于",
    "宁",
    "自各儿",
    "已经",
    "是不是",
    "今后",
    "一旦",
    "受到",
    "离",
    "也好",
    "前面",
    "喏",
    "的话",
    "少数",
    "让",
    "嘘",
    "这么点儿",
    "果然",
    "莫若",
    "这会儿",
    "直到",
    "比",
    "各位",
    "毫不",
    "由",
    "相似",
    "何时",
    "不会",
    "与其",
    "后面",
    "特别是",
    "得到",
    "广泛",
    "一面",
    "要么",
    "先生",
    "哼",
    "即令",
    "何",
    "宁可",
    "省得",
    "同一",
    "不惟",
    "这麽",
    "真正",
    "他人",
    "必然",
    "倘若",
    "所",
    "相等",
    "多数",
    "既然",
    "兮",
    "表明",
    "上来",
    "最后",
    "非徒",
    "行动",
    "一来",
    "鄙人",
    "自从",
    "向着",
    "吱",
    "咱",
    "存在",
    "看来",
    "出去",
    "一则",
    "哈",
    "引起",
    "进入",
    "你的",
    "采取",
    "两者",
    "尚且",
    "既是",
    "乃",
    "似乎",
    "要不然",
    "进行",
    "你",
    "良好",
    "冲",
    "起",
    "岂但",
    "逐渐",
    "前者",
    "鉴于",
    "而且",
    "倘或",
    "有效",
    "看到",
    "并不是",
    "俺们",
    "朝着",
    "也",
    "越是",
    "换言之",
    "防止",
    "绝对",
    "一边",
    "尽",
    "乎",
    "下面",
    "咳",
    "哪天",
    "各级",
    "其",
    "及其",
    "啦",
    "不够",
    "能够",
    "不但",
    "以後",
    "经常",
    "有点",
    "什么",
    "具有",
    "一片",
    "知道",
    "大家",
    "要不",
    "行为",
    "来",
    "个别",
    "十分",
    "作为",
    "相同",
    "反过来说",
    "哪边",
    "上述",
    "此",
    "趁着",
    "阿",
    "中间",
    "不问",
    "跟",
    "照",
    "现代",
    "它的",
    "要不是",
    "否则",
    "这个",
    "必须",
    "限制",
    "显然",
    "着",
    "时候",
    "结果",
    "若是",
    "更加",
    "最後",
    "谁知",
    "逐步",
    "如此",
    "因",
    "焉",
    "何况",
    "哪",
    "比方",
    "深入",
    "之后",
    "加之",
    "正如",
    "呸",
    "从而",
    "不仅",
    "沿着",
    "某个",
    "允许",
    "谁",
    "和",
    "上升",
    "总的来说",
    "据",
    "沿",
    "不敢",
    "突然",
    "下列",
    "看见",
    "当然",
    "呵",
    "以免",
    "大约",
    "然后",
    "看看",
    "严重",
    "只是",
    "以下",
    "正在",
    "第",
    "觉得",
    "依照",
    "咦",
    "之後",
    "前进",
    "总的说来",
    "非但",
    "总是",
    "哟",
    "认识",
    "各人",
    "目前",
    "也是",
    "以至",
    "总而言之",
    "冒",
    "有关",
    "你们",
    "及时",
    "一定",
    "哦",
    "靠",
    "然後",
    "自个儿",
    "既",
    "能否",
    "嗬",
    "故",
    "乘",
    "里面",
    "特殊",
    "大多数",
    "最大",
    "直接",
    "虽",
    "那个",
    "一下",
    "转贴",
    "呼哧",
    "互相",
    "意思",
    "曾经",
    "紧接着",
    "顺着",
    "上下",
    "同样",
    "及",
    "总之",
    "要是",
    "以及",
    "它",
    "方面",
    "反应",
    "较",
    "之类",
    "全部",
    "是因为",
    "the",
    "事情",
    "译者",
    "to",
    "一种",
    "特别",
    "情况",
    "身上",
    "这是",
    "of",
    "之间",
    "投稿",
    "之间",
    "女性",
    "感觉",
    "男性",
    "能量",
    "对方",
    "发现",
    "方式",
    "父母",
    "身上",
    "两个",
    "来说",
    "变得",
    "女人",
    "感觉",
    "女性",
]

# 数据预处理
def preprocess_text(content):
    # 这里可以添加更复杂的文本预处理步骤
    return " ".join(jieba.cut(content))

df['processed_text'] = df['content'].apply(preprocess_text)


# response = requests.get(font_url)
font_path = "Sour ceHanSansSC-Regular.otf"
# with open(font_path, 'wb') as f:
#     f.write(response.content)


# 词频分析
def get_top_n_words(corpus, n=None, stop_words=None):
    vec = CountVectorizer(stop_words=stop_words).fit(corpus)
    # print("Actual stop words used:", vec.get_stop_words())  # 打印实际使用的停用词   
    bag_of_words = vec.transform(corpus)
    sum_words = bag_of_words.sum(axis=0) 
    words_freq = [(word, sum_words[0, idx]) for word, idx in vec.vocabulary_.items()]
    words_freq = sorted(words_freq, key=lambda x: x[1], reverse=True)
    return words_freq[:n]

top_words = get_top_n_words(df['processed_text'] ,70, custom_stop_words)

for word, freq in top_words:
    print(f"{word}: {freq}")

# 情感分析 (示例，需要进一步实现)
def sentiment_analysis(content):
    # 这里需要一个中文情感分析模型
    return np.random.choice(['Positive', 'Negative', 'Neutral'])

df['sentiment'] = df['processed_text'].apply(sentiment_analysis)

# 优化后的主题建模
def lda_topic_modeling(corpus, n_components_list=[5, 10, 15, 20], max_iter=15):
    # 使用TF-IDF进行特征提取
    vectorizer = TfidfVectorizer(stop_words=custom_stop_words)
    data_vectorized = vectorizer.fit_transform(corpus)

    # 搜索最佳的主题数量
    search_params = {'n_components': n_components_list}
    lda = LatentDirichletAllocation(max_iter=max_iter, learning_method='online')
    model = GridSearchCV(lda, param_grid=search_params, cv=5)
    model.fit(data_vectorized)

    best_lda_model = model.best_estimator_

    print("Best Model's Params: ", model.best_params_)
    print("Best Log Likelihood Score: ", model.best_score_)
    print("Model Perplexity: ", best_lda_model.perplexity(data_vectorized))

    return best_lda_model, vectorizer.get_feature_names_out(), data_vectorized

# 应用优化后的LDA模型
lda_model, lda_feature_names, lda_data_vectorized = lda_topic_modeling(df['processed_text'])

# 查看主题
def display_topics(model, feature_names, no_top_words):
    for topic_idx, topic in enumerate(model.components_):
        print("Topic %d:" % (topic_idx))
        print(" ".join([feature_names[i] for i in topic.argsort()[:-no_top_words - 1:-1]]))

display_topics(lda_model, lda_feature_names, no_top_words=10)

def random_color_func(word=None, font_size=None, position=None, orientation=None, font_path=None, random_state=None):
    """Generate aesthetically pleasing colors in RGB format."""
    # 色调: 0-360度中的随机值，代表颜色的种类
    # 饱和度: 0.5-1.0的范围内，高饱和度意味着颜色更纯
    # 亮度: 0.3-0.7的范围内，避免过于明亮或过于暗淡
    hue = random.randint(0, 360)
    saturation = random.uniform(0.5, 1.0)
    lightness = random.uniform(0.3, 0.7)

    # 将HSL颜色转换为RGB格式
    rgb_color = colorsys.hls_to_rgb(hue/360.0, lightness, saturation)

    return rgb_color

# 数据可视化
# 词云
# 1 treemap
def plot_treemap(word_freq,font_path):
    # 准备数据
    words = list(word_freq.keys())
    frequencies = list(word_freq.values())
    print(words)
   # 创建颜色列表
    colors = [random_color_func() for _ in range(len(words))]
    # 创建树图
    plt.figure(figsize=(12, 7))
    squarify.plot(sizes=frequencies, label=words, color=colors, alpha=0.6)

    # 设置标题和显示图表
    plt.title('Treemap of Word Frequencies')
    plt.axis('off')
    # 添加中文词频信息
    for word, freq in word_freq.items():
        plt.text(0, 0, f"{word}: {freq}", fontsize=12, color="white")
    plt.show()

# 用实际的数据调用函数绘制树图
# plot_treemap(dict(top_words),font_path)

def plot_wordcloud(word_freq,font_path):
    wordcloud = WordCloud(width=1000, height=800, background_color='white',font_path=font_path,color_func=random_color_func, collocations=False)
    wordcloud.generate_from_frequencies(word_freq)

    plt.figure(figsize=(12, 7))
    plt.imshow(wordcloud, interpolation="bilinear")
    plt.axis("off")

    # 添加词频信息
    for word, freq in word_freq.items():
        plt.text(0, 0, f"{word}: {freq}", fontsize=12, color="black", backgroundcolor="red")

    plt.show()

# 调用函数绘制词云图
plot_wordcloud(dict(top_words),font_path)

# 词频直方图
def plot_top_words(word_freq):
    words = [word for word, freq in word_freq]
    freqs = [freq for word, freq in word_freq]
    plt.figure(figsize=(10, 5))
    plt.bar(words, freqs)
    plt.xlabel('Words')
    plt.ylabel('Frequency')
    plt.xticks(rotation=45)
    plt.title('Top Words in Corpus')
    plt.show()

plot_top_words(top_words)
